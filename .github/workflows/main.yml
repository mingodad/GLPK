name: build and run tests
on:
  workflow_dispatch
jobs:
  build-release-linux-i686-amd64:
    name: GLPK master linux/amd64
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Install depedencies
      run: sudo apt-get install -y
        gcc-8-i686-linux-gnu
        g++-8-i686-linux-gnu
    # see what's available in /usr/bin
    - name: see what's available
      run: ls -l /usr/bin
    # build project amd64
    - name: build amd64
      run: |
        git checkout -f local-set-param
        CFLAGS="-pipe -O3 -march=native -ffp-contract=off -DWITH_SPLAYTREE -DNDEBUG -flto" ./configure --disable-shared
        make
        cp examples/glpsol ../glpsol-linux-amd64
    # run tests
    - name: run examples amd64
      run: |
        cd examples
        ./test-all.sh
        cd ..
    # upload artifact, glpsol binary
    - name: Upload glpk-linux-amd64 binary
      uses: actions/upload-artifact@v1
      with:
        name: download glpsol-linux-amd64
        path: glpsol-linux-amd64
    # build project i686
    - name: build i686
      run: |
        make clean
        CFLAGS="-m32 -pipe -O3 -march=native -ffp-contract=off -DWITH_SPLAYTREE -DNDEBUG -flto" ./configure --disable-shared
        make
        cp examples/glpsol ../glpsol-linux-i686
    # run tests
    - name: run examples i686
      run: |
        cd examples
        ./test-all.sh
        cd ..
    # upload artifact, glpsol binary
    - name: Upload glpk-linux-i686 binary
      uses: actions/upload-artifact@v1
      with:
        name: download glpk-linux-i686
        path: glpk-linux-i686

  build-release-osx-amd64:
    name: GLPK master osx/amd64
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    # see what's available in /usr/bin
    - name: see what's available
      run: ls -l /usr/bin
    # build project amd64
    - name: build amd64
      run: |
        git checkout -f local-set-param
        CFLAGS="-pipe -O3 -march=native -ffp-contract=off -DWITH_SPLAYTREE -DNDEBUG -flto" ./configure --disable-shared
        make
        cp examples/glpsol ../glpsol-osx-amd64
    # run tests
    - name: run examples amd64
      run: |
        cd examples
        ./test-all.sh
        cd ..
    # upload artifact, glpsol binary
    - name: Upload glpsol-osx-amd64 binary
      uses: actions/upload-artifact@v1
      with:
        name: download glpsol-osx-amd64
        path: glpsol-osx-amd64

  build-release-windows-i686-amd64:
    name: picat master windows/amd64
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Install depedencies
      run: sudo apt-get install -y
        mingw-w64
        libz-mingw-w64-dev
        wine64
    # see what's available in /usr/bin
    - name: see what's available
      run: ls -l /usr/bin
    # build project amd64
    - name: build amd64
      run: |
        git checkout -f local-set-param
        CFLAGS="-pipe -O3 -march=native -ffp-contract=off -DWITH_SPLAYTREE -DNDEBUG -flto -D__WOE__" ./configure --disable-shared --host=x86_64-w64-mingw32
        make
        cp examples/glpsol.exe ../glpsol-windows-amd64.exe
    # run tests
    - name: run test_exs amd64
      run: |
        cd examples
        GLPSOL_CMD='wine ./glpsol.exe' ./test-all.sh
        cd ..
    # upload artifact, picat binary
    - name: Upload glpsol-windows-amd64 binary
      uses: actions/upload-artifact@v1
      with:
        name: download glpsol-windows-amd64.exe
        path: glpsol-windows-amd64.exe
    # build project i686
    - name: build i686
      run: |
        make clean
        CFLAGS="-m32 -pipe -O3 -march=native -ffp-contract=off -DWITH_SPLAYTREE -DNDEBUG -flto -D__WOE__" ./configure --disable-shared --host=x86_64-w64-mingw32
        make
        cp examples/glpsol.exe ../glpsol-windows-i686.exe
    # upload artifact, picat binary
    - name: Upload glpsol-windows-i686 binary
      uses: actions/upload-artifact@v1
      with:
        name: download glpsol-windows-i686.exe
        path: glpsol-windows-i686.exe

